version: '3.4'

services:
  nginx:
    image: ${CONTAINER_REGISTRY_BASE}/nginx:${CONTAINER_DEV_VERSION}
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: api_platform_nginx
    ports:
      - 8086:80
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl/:/etc/nginx/ssl
      - ./public:/srv/api/public:ro
    links:
      - php
    restart: always
  php:
    image: ${CONTAINER_REGISTRY_BASE}/php:${CONTAINER_DEV_VERSION}
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: api_platform_php
    volumes:
      - ./docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
      - ./bin:/srv/api/bin
      - ./config:/srv/api/config
      - ./public:/srv/api/public
      - ./src:/srv/api/src
      - ./books:/srv/api/books
      - ./templates:/srv/api/templates
      - ./translations:/srv/api/translations
      - ./vendor:/srv/api/vendor
      - ./composer.json:/srv/api/composer.json
      - ./composer.lock:/srv/api/composer.lock
      - ./symfony.lock:/srv/api/symfony.lock
      - .env:/srv/api/.env
    env_file:
      - .env.local
    depends_on:
      - mysql
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: science_feft
      MYSQL_ROOT_PASSWORD: webant
    ports:
      - 33066:3306
    volumes:
      - ./docker/db/dev-mysql:/var/lib/mysql
      - ./docker/db/dev-log:/var/log